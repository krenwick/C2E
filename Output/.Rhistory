pts4 <- extract(MAT,pts3[,1:2])
cover <- as.data.frame(pts4)
# Plot a smoothed histogram of cover data
# Split to color by confidence
myCols = c("red","lightgray","blue")
max<- max(d4[d4$consensus=="Increase",]$MAT)
min <- min(d4[d4$consensus=="Decrease",]$MAT)
c2 <- cover %>%
mutate(cat=ifelse(pts4>max, "Decrease","Either")) %>%
mutate(cat=ifelse(pts4<min, "Increase",cat))
hist <-
ggplot(data=c2, aes(x=pts4, fill=cat)) +
geom_bar(aes(y = (..count..)/sum(..count..)), binwidth = .5) +
scale_fill_manual(values=myCols) +
geom_vline(xintercept=min, linetype="dashed") +
geom_vline(xintercept=max, linetype="dashed") +
xlab(expression("Mean Annual Temperature ("*~degree*"C)")) +
ylab("Proportion of Range") +
xlim(c(-5.9,22.9)) +
theme(legend.position="none",
panel.grid.major=element_blank(), panel.grid.minor=element_blank()) +
annotate("text", x=-Inf, y = Inf, label = "(b)", vjust=vj, hjust=hj, size=3,fontface=2)
# Save Plots
# first, fix annoying issue with axes not lining up
gp1<- ggplot_gtable(ggplot_build(pts))
gp2<- ggplot_gtable(ggplot_build(hist))
maxWidth = unit.pmax(gp1$widths[2:3], gp2$widths[2:3])
gp1$widths[2:3] <- maxWidth
gp2$widths[2:3] <- maxWidth
grid.arrange(arrangeGrob(gp1,gp2, ncol=1))
# Save scatterplot and boxplot
distrib <- grid.arrange(arrangeGrob(gp1,gp2, ncol=1, heights=c(68,75), widths=col1))
ggsave(paste(fpath, "vulnerability_rangehist.pdf", sep=""), plot=distrib,
width = col1, height = 143, units = 'mm')
################################################################################
# Fig. 5: Plot the change/confidence on Andy's PCA axes (RCP8.5)
################################################################################
vj <- 1.3 # vertical adjustment for panel label, pos moves down
hj <- 2.1 # horizotal placement of panel label, neg moves right, pos left
# merge PCA back into manipulated data
m2 <- merged %>% group_by(site) %>% summarise_each(funs(mean)) %>%
dplyr::select(site,Comp.1,Comp.2) %>%
mutate(Comp.1_rev=Comp.1*-1)
d3 <- merge(d2,m2, by="site", all=F) # d2 is just RCP8.5
dim(d3)
gg3 <-
ggplot(data = d3, aes(x = Comp.1_rev, y = Comp.2)) +
#geom_point(aes(fill = conf2), size = 1,colour="black",pch=21) +
# scale_fill_gradient2(low="red", high="blue",
# name="Model\nAgreement\n",
# breaks=c(-20,0,20),labels=c(-20,0,20),
# limits=c(-20,20)) +
geom_point(size=1, aes(color=conf2)) +
scale_color_gradient2(low="red", high="blue",
name="Vulnerability\nScore\n",
breaks=c(-20,0,20),labels=c(-20,0,20),
limits=c(-20,20)) +
xlab( 'PC1 : (Site Temperature)') +
ylab( 'PC2 : (Precipitation Seasonality)') +
theme(legend.justification=c(1,1), legend.position=c(.99,.99),
panel.grid.major=element_blank(), panel.grid.minor=element_blank()) +
guides(color = guide_colorbar(barheight = unit(1.5, "cm"))) +
#guides(fill = guide_colorbar(barheight = unit(1.5, "cm"))) +
annotate("text", x=-Inf, y = Inf, label = "(a)", vjust=vj, hjust=hj, size=3,fontface=2)
# Code to override clipping
gt2 <- ggplot_gtable(ggplot_build(gg3))
gt2$layout$clip[gt2$layout$name == "panel"] <- "off"
gg3 <-gt2
################################################################################
# Make map showing change/confidence (panel b) (RCP8.5)
################################################################################
m6 <- merged %>% group_by(site) %>%
summarise_each(funs(mean)) %>%
dplyr::select(site:latitude.x,bio1:bio19)
mapdat <- merge(d2,m6,by="site",all.y=F)
md2 <- mapdat %>% group_by(site) %>%
summarise(conf2=mean(conf2), lat=mean(latitude.x), lon=mean(longitude.x))
table(md2$conf2)
range(md2$lat)
range(md2$lon)
agree <-
ggplot(data=md2, aes(y=lat, x=lon)) +
geom_polygon(data=wus, aes(long,lat, group), fill=NA,color="black", size=.1) +
geom_point(size=1, aes(color=conf2)) +
scale_color_gradient2(low="red", high="blue",
name="Vulnerability\nScore\n",
breaks=c(-20,0,20),labels=c(-20,0,20),
limits=c(-20,20)) +
ylab("Longitude") +
xlab("Latitude") +
coord_map("albers", lat0=39, lat1=45) +
#coord_fixed(1.3) +
theme(legend.position="none") +
theme(#legend.margin=unit(0, "cm"),
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(), panel.background=element_blank(),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
annotate("text", x=-127, y = 49, label = "(b)", hjust=3, size=3,fontface=2)
# Code to override clipping
gt22 <- ggplot_gtable(ggplot_build(agree))
gt22$layout$clip[gt22$layout$name == "panel"] <- "off"
agree2 <-gt22
plot(agree2)
# Save PCA and map as multi-panel fig.
pcamap <- grid.arrange(gg3, agree2, ncol=1, heights=c(col1,col1), widths=col1)
ggsave(paste(fpath, "pca_map_results.pdf", sep=""), plot=pcamap,
width = col1, height = col2, units = 'mm')
################################################################################
# Figure 2 for factsheet: just the map
################################################################################
map <-
ggplot(data=md2, aes(y=lat, x=lon)) +
geom_polygon(data=wus, aes(long,lat, group), fill=NA,color="black", size=.1) +
# geom_point(aes(fill=conf2), size = 1,colour="black",pch=21) +
# scale_fill_gradient2(low="red", high="blue",
#                      name="Model\nAgreement\n",
#                      breaks=c(-20,0,20),labels=c(-20,0,20),
#                      limits=c(-20,20)) +
geom_point(size=1, aes(color=conf2)) +
scale_color_gradient2(low="red", high="blue",
name="Model\nAgreement\n",
breaks=c(-20,0,20),labels=c("Decrease","Uncertain","Increase"),
limits=c(-20,20)) +
ylab("Longitude") +
xlab("Latitude") +
coord_map("albers", lat0=39, lat1=45) +
theme(legend.position="right") +
theme(legend.spacing=unit(0, "cm"),
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(), panel.background=element_blank(),
panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
guides(color = guide_colorbar(barheight = unit(2, "cm")))
map
ggsave(paste(fpath, "factsheet_map.pdf", sep=""), plot=map,
width = 90, height = 70, units = 'mm')
install.packages('rvest')
library('rvest') # a Hadleyverse package for web scraping
url <- 'https://www.bestplaces.net/'
webpage <- read_html(url)
.17*300
3926*12
32/8
30.95/12
20*.01*120000
.15*60000
7.82+12.71+10.48+6.64
75/12
12.56/50.8
11.56/50.8
5.98/33.8
1.41/12
rm(list=ls())
library(DEoptim)
library(tidyverse); theme_set(theme_bw(base_size=10))
library(data.table)
library(zoo)
library(grid)
library(gridExtra)
setwd("~/Documents/C2E/")
outname1 <- "OptimRun"
outname2 <- "OptimRun_Irr"
object1 <- "OptimOut.RData"
load(object1)
summary(DE1)
DE1$optim
insfile <- "Code/OptimDummy.ins" # name of ins file to use
ins  <- readLines(insfile)
tx  <- gsub(pattern = "drought_tolval1", replace = DE1$optim$bestmem[1], x = ins)
tx  <- gsub(pattern = "drought_tolval2", replace = DE1$optim$bestmem[2], x = tx)
tx  <- gsub(pattern = "aphenmaxval1", replace = DE1$optim$bestmem[3], x = tx)
tx  <- gsub(pattern = "aphenmaxval2", replace = DE1$optim$bestmem[4], x = tx)
tx  <- gsub(pattern = "ltormaxval1", replace = DE1$optim$bestmem[5], x = tx)
tx  <- gsub(pattern = "ltormaxval2", replace = DE1$optim$bestmem[6], x = tx)
tx  <- gsub(pattern = "wscalminval1", replace = DE1$optim$bestmem[7], x = tx)
tx  <- gsub(pattern = "wscalminval2", replace = DE1$optim$bestmem[8], x = tx)
tx  <- gsub(pattern = "parff_minval1", replace = DE1$optim$bestmem[9], x = tx)
tx  <- gsub(pattern = "parff_minval2", replace = DE1$optim$bestmem[10], x = tx)
tx  <- gsub(pattern = "npatch 10", replace = "npatch 100", x = tx)
insname <- "OptimParms"
tx  <- gsub(pattern = "randomval", replace = outname1, x = tx)
tx  <- gsub(pattern = "\\./", replace = "Output/", x = tx)
writeLines(tx, con=paste("Code/",insname,".ins", sep=""))
system("/Users/poulterlab1/version-control/LPJ-GUESS/ModelFiles/modules/./guess /Users/poulterlab1/Documents/C2E/Code/OptimParms.ins")
insfile2 <- "Code/OptimParms.ins" # name of ins file to use
ins  <- readLines(insfile2)
insname <- "OptimParms_Irr"
tx  <- gsub(pattern = "ppt.txt", replace = "ppt_irr.txt", x = tx)
tx  <- gsub(pattern = "wetd.txt", replace = "wetd_irr.txt", x = tx)
tx  <- gsub(pattern = outname1, replace = outname2, x = tx)
writeLines(tx, con=paste("Code/",insname,".ins", sep=""))
system("/Users/poulterlab1/version-control/LPJ-GUESS/ModelFiles/modules/./guess /Users/poulterlab1/Documents/C2E/Code/OptimParms_Irr.ins")
k <- read.csv("Data/RefData/anpp_1991_2012.csv")
npp <- read.table("Output/anpp_OptimRun.txt", header=T) %>%
mutate(Source="Model", Treatment="control") %>%
mutate_at(vars(ANGE:Total), funs(.*2000)) %>%
mutate(year=Year+860) %>%
filter(year>=1991) %>%
select(year,Source,Treatment,Total) %>%
mutate(Total=Total*0.4761905) %>% # so just above-ground
rename(NPP=Total)
npp2 <- read.table("Output/anpp_OptimRun_Irr.txt", header=T) %>%
mutate(Source="Model", Treatment="irrigated") %>%
mutate_at(vars(ANGE:Total), funs(.*2000)) %>%
mutate(year=Year+860) %>%
filter(year>=1991) %>%
select(year,Source,Treatment,Total) %>%
mutate(Tot=ifelse(year<=(1990), Total*0.4761905, NA)) %>%
mutate(Tot=ifelse(year>1990 & year<2000, Total*0.5235602, Tot)) %>%
mutate(Tot=ifelse(year>=2000, Total*0.5494505, Tot)) %>%
select(-Total) %>%
rename(NPP=Tot)
knpp <- k %>% rename(Treatment=treatment, NPP=anpp_gm2) %>%
mutate(Source="Field") %>%
select(year,Source,Treatment,NPP)
npp1 <- rbind(npp,npp2,knpp) %>%
rename(Year=year)
mod <- filter(npp1, Source=="Model")
field <- filter(npp1, Source=="Field")
ggplot(data=field, aes(x=Year, y=NPP)) +
geom_bar(stat="identity", fill="lightgray", color="black") +
geom_point(data=mod, color="chartreuse4", size=2) +
ylab(expression(ANPP~(g~m^{-2}))) +
xlab("Year") +
facet_wrap(~Treatment)
fpc1 <- read.table("Output/fpc_OptimRun.txt", header=T) %>%
mutate(Treatment="Ambient")
fpc3 <- read.table("Output/fpc_OptimRun_Irr.txt", header=T) %>%
mutate(Treatment="Irrigation")
fpc <- rbind.data.frame(fpc1,fpc3) %>%
mutate(Year=Year+860) %>%
filter(Year>=1980) %>%
gather(Species, FPC, ANGE:PAVI)
ggplot(data=fpc, aes(x=Year,y=FPC, color=Species)) +
geom_line() +
geom_point() +
facet_wrap(~Treatment)
npp <- read.table("Output/anpp_OptimRun.txt", header=T) %>%
mutate(Source="Model", Treatment="control") %>%
mutate_at(vars(ANGE:Total), funs(.*2000)) %>%
mutate(Year=Year+860) %>%
filter(Year>=1991) %>%
mutate_at(vars(ANGE:Total), funs(.*0.4761905)) %>%
select(Year,Source,Treatment,ANGE:PAVI) %>%
gather(Species, ANPP, ANGE:PAVI)
npp2 <- read.table("Output/anpp_OptimRun_Irr.txt", header=T) %>%
mutate(Source="Model", Treatment="irrigated") %>%
mutate_at(vars(ANGE:Total), funs(.*2000)) %>%
mutate(Year=Year+860) %>%
filter(Year>=1991) %>%
mutate_at(vars(ANGE:Total), funs(ifelse(Year<=1990, .*0.4761905,
ifelse(Year>1990 & Year<2000, .*0.5235602,
.*0.5494505)))) %>%
select(Year,Source,Treatment,ANGE:PAVI) %>%
gather(Species, ANPP, ANGE:PAVI)
npp3 <- rbind(npp,npp2)
ggplot(data=npp3, aes(x=Year, y=ANPP, color=Species)) +
geom_point() +
geom_line() +
ylab(expression(ANPP~(g~m^{-2}))) +
facet_wrap(~Treatment)
orig1 <- NULL
vars=c("mgpp","mrh","mra","mnee","mevap","maet","mlai","mwcont_upper")
for(var in vars) {
data=paste("/orig1_",var,".out", sep="")
b <- fread(data, header=T)
b1 <- b %>% mutate(Year=Year+860) %>%
filter(Year>=1991) %>%
gather(Month,orig1, Jan:Dec) %>%
mutate(Variable=var) %>%
select(Year, Month,Variable,orig1)
orig1 <- rbind.data.frame(orig1,b1)
}
################################################################################
# Plot standard parameter runs (evergreen, summergreen, raingreen) against flux dat
# This also looks at MODIS and field LAI in comparison to mod runs
################################################################################
rm(list=ls())
library(tidyverse); theme_set(theme_bw(base_size=10))
library(zoo)
library(data.table)
library(grid)
library(gridExtra)
# Set working directory
setwd("~/Documents/SageParm")
# Journal Specifications for figure size
# Agricultural and Forest Meteorology
col1 <- 90 # 1 column width, in mm
col1.5 <- 140
col2 <- 190 # 2 column width, in mm
#########################################################
# Read in flux data from 4 RC sites
df3 <- read.csv("data/RCflux_15_16.csv")
# Pull in LAI data from MODIS
mod <- read.csv("data/ReynoldsC/MODIS/lai_gpp.csv") %>%
mutate(Latitude=round(Latitude,2)) %>%
mutate(Site=ifelse(Latitude==43.06, "mbsec", "FIX")) %>%
mutate(Site=ifelse(Latitude==43.12, "h08ec",Site)) %>%
mutate(Site=ifelse(Latitude==43.14, "losec",Site)) %>%
mutate(Site=ifelse(Latitude==43.17, "wbsec",Site)) %>%
rename(Year=year) %>%
mutate(Month=month.abb[month]) %>%
gather(Variable, MODIS, LAI:GPP) %>%
select(Year,Month,Variable,Site,MODIS,Date)
# Merge flux with MODIS LAI
df4 <- merge(df3,mod,by=c("Year","Month","Variable","Site"), all=T) %>%
mutate(Date=as.Date(Date)) %>%
filter(Date>="2014-10-01")
table(df4$Variable)
# Pull in data from the SUMMERGREEN model runs
summer <- NULL
vars=c("mgpp","mrh","mra","mnee","mevap","maet","mlai")
for(var in vars) {
data=paste("RCout/orig_summer_",var,".out", sep="")
b <- fread(data, header=T)
# select appropriate years (2014-2016)
b1 <- b %>% mutate(Year=Year+860) %>%
filter(Year>=2014) %>%
gather(Month,Summergreen, Jan:Dec) %>%
mutate(Site=ifelse(Lon==-116.7486, "mbsec", "FIX")) %>%
mutate(Site=ifelse(Lon==-116.7356, "losec", Site)) %>%
mutate(Site=ifelse(Lon==-116.7132, "wbsec", Site)) %>%
mutate(Site=ifelse(Lon==-116.7231, "h08ec", Site)) %>%
mutate(Variable=var) %>%
select(Year, Month,Site,Variable,Summergreen)
summer <- rbind.data.frame(summer,b1)
}
# Pull in data from the EVERGREEN model runs
ever <- NULL
vars=c("mgpp","mrh","mra","mnee","mevap","maet","mlai")
for(var in vars) {
data=paste("RCout/orig_ever_",var,".out", sep="")
b <- fread(data, header=T)
# select appropriate years (2014-2015)
b1 <- b %>% mutate(Year=Year+860) %>%
filter(Year>=2014) %>%
gather(Month,Evergreen, Jan:Dec) %>%
mutate(Site=ifelse(Lon==-116.7486, "mbsec", "FIX")) %>%
mutate(Site=ifelse(Lon==-116.7356, "losec", Site)) %>%
mutate(Site=ifelse(Lon==-116.7132, "wbsec", Site)) %>%
mutate(Site=ifelse(Lon==-116.7231, "h08ec", Site)) %>%
mutate(Variable=var) %>%
select(Year, Month,Site,Variable,Evergreen)
ever <- rbind.data.frame(ever,b1)
}
# Pull in data from the RAINGREEN model runs
rain <- NULL
vars=c("mgpp","mrh","mra","mnee","mevap","maet","mlai")
for(var in vars) {
data=paste("RCout/orig_rain_",var,".out", sep="")
b <- fread(data, header=T)
# select appropriate years (2014-2015)
b1 <- b %>% mutate(Year=Year+860) %>%
filter(Year>=2014) %>%
gather(Month,Raingreen, Jan:Dec) %>%
mutate(Site=ifelse(Lon==-116.7486, "mbsec", "FIX")) %>%
mutate(Site=ifelse(Lon==-116.7356, "losec", Site)) %>%
mutate(Site=ifelse(Lon==-116.7132, "wbsec", Site)) %>%
mutate(Site=ifelse(Lon==-116.7231, "h08ec", Site)) %>%
mutate(Variable=var) %>%
select(Year, Month,Site,Variable,Raingreen)
rain <- rbind.data.frame(rain,b1)
}
all <- merge(ever,summer, by=c("Year","Month","Variable","Site")) %>%
merge(.,rain,by=c("Year","Month","Variable","Site")) %>%
mutate(Variable=replace(Variable,Variable=="mgpp","GPP")) %>%
mutate(Variable=replace(Variable,Variable=="mnee","NEE")) %>%
mutate(Variable=replace(Variable,Variable=="mlai","LAI")) %>%
merge(.,df4, by=c("Year","Month","Variable","Site")) %>%
mutate(Site=factor(Site, levels=c("wbsec","losec","h08ec","mbsec"),
labels=c("WBS","LOS","PFS","MBS"), ordered=T))
all$D <- as.yearmon(paste(all$Year, all$Month), "%Y %b")
all$Date <- as.Date(all$D)
# Make a plot for GPP
GPP <- filter(all, Variable=="GPP") %>%
dplyr::filter(Date>="2014-10-01"&Date<="2016-09-01") %>%
gather(Source, GPP, Evergreen:Tower)
ann_text <- data.frame(Date = as.Date(c("2014-11-01","2014-11-01","2014-11-01",
"2014-11-01")),
GPP= c(.24,.24,.24,.24),
Site = c("WBS","LOS","PFS", "MBS"),
lab=c("a) WBS","b) LOS","c) PFS", "d) MBS"))
flux <- ggplot(data=GPP, aes(x=Date, y=GPP)) +
#geom_point(aes(color=Source)) +
geom_line(aes(color=Source,linetype=Source)) +
scale_linetype_manual(name="Source",
breaks=c("Evergreen","Raingreen","Summergreen","Tower"),
labels=c("Evergreen","Raingreen","Summergreen","Reference Data"),
values=c("dashed", "dashed","dashed","solid"))+
scale_color_manual(name="Source",
breaks=c("Evergreen","Raingreen","Summergreen","Tower"),
labels=c("Evergreen","Raingreen","Summergreen","Reference Data"),
values=c("darkcyan","deepskyblue","purple","black")) +
facet_wrap(~Site, ncol=4) +
#geom_text(data = ann_text,aes(x=Date, y=GPP,label=lab)) +
xlab("Date") +
ylab(expression(GPP~(kgC~m^{-2}~month^{-1}))) +
scale_x_date(date_breaks = "3 months",date_labels = "%b %y") +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
strip.background = element_blank(),
strip.text = element_blank(),
panel.grid.minor=element_blank(),
#panel.border = element_rect(colour = "black"),
legend.position = "top",
panel.grid.major = element_line(size=0.2))
flux
ggsave("figures/GPP_ever_summer_flux.pdf", plot=flux,
width = col2, height = col1, units = 'mm')
# Make a plot for LAI:
LAI <- filter(all, Variable=="LAI") %>%
gather(Source, LAI, Evergreen:MODIS) %>%
filter(Source!="Tower") %>%
dplyr::filter(Date>="2014-10-01"&Date<="2016-09-01") %>%
mutate(Source=factor(Source,levels=c("Evergreen","Raingreen","Summergreen",
"MODIS"), ordered=T))
ann_text <- data.frame(Date = as.Date(c("2014-11-01","2014-11-01","2014-11-01",
"2014-11-01")),
LAI = c(5,5,5,5),
Site = c("WBS","LOS","PFS", "MBS"),
lab=c("a) WBS","b) LOS","c) PFS", "d) MBS"))
lai <- ggplot(data=LAI, aes(x=Date, y=LAI)) +
#geom_point(aes( color=Source)) +
geom_line(aes( color=Source, linetype=Source)) +
scale_linetype_manual(name="Source",
breaks=c("Evergreen","Raingreen","Summergreen","MODIS"),
labels=c("Evergreen","Raingreen","Summergreen","Reference Data"),
values=c("dashed", "dashed","dashed","solid"))+
scale_color_manual(name="Source",
breaks=c("Evergreen","Raingreen","Summergreen","MODIS"),
labels=c("Evergreen","Raingreen","Summergreen","Reference Data"),
values=c("darkcyan","deepskyblue","purple","black")) +
#geom_text(data = ann_text,aes(x=Date, y=LAI,label=lab)) +
facet_wrap(~Site, ncol=4) +
xlab("Month") +
ylab("Leaf Area Index") +
scale_x_date(date_breaks = "3 months",date_labels = "%b %y") +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
strip.background = element_blank(),
#strip.text = element_blank(),
panel.grid.minor = element_blank(),
# panel.border = element_rect(colour = "black"),
legend.position = "top",
legend.margin=margin(t=0, r=0, b=-.3, l=0, unit="cm"),
panel.grid.major = element_line(size=0.2))
lai
ggsave("figures/LAI_ever_summer_modis.pdf", plot=lai,
width = col2, height = col2, units = 'mm')
################################################################################
# Make pub-level plot including GPP + LAI
################################################################################
gpp2 <- flux +
theme(legend.position = "none")
lai2 <- lai +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank())
# first, fix annoying issue with axes not lining up
gp1<- ggplot_gtable(ggplot_build(gpp2))
gp2<- ggplot_gtable(ggplot_build(lai2))
maxWidth = unit.pmax(gp1$widths[2:3], gp2$widths[2:3])
gp1$widths[2:3] <- maxWidth
gp2$widths[2:3] <- maxWidth
both <- grid.arrange(arrangeGrob(gp2,gp1, ncol=1,heights = unit(c(60,60), "mm")))
ggsave("figures/GPP_LAI_origpheno.pdf", plot=both,
width = col2, height = 120, units = 'mm')
################################################################################
# Re-do this plot in black and white for print
################################################################################
printsafe <- c('#a6cee3','#1f78b4','#b2df8a','black')
printsafe2 <- c('#1b9e77', '#d95f02', '#7570b3', 'black')
gpp3 <- gpp2 + scale_color_manual(values=printsafe)
lai3 <- lai2 + scale_color_manual(name="Source",
breaks=c("Evergreen","Raingreen","Summergreen","MODIS"),
labels=c("Evergreen","Raingreen","Summergreen","Reference Data"),
values=printsafe2)
# first, fix annoying issue with axes not lining up
gp1<- ggplot_gtable(ggplot_build(gpp3))
gp2<- ggplot_gtable(ggplot_build(lai3))
maxWidth = unit.pmax(gp1$widths[2:3], gp2$widths[2:3])
gp1$widths[2:3] <- maxWidth
gp2$widths[2:3] <- maxWidth
both <- grid.arrange(arrangeGrob(gp2,gp1, ncol=1,heights = unit(c(60,60), "mm")))
ggsave("figures/GPP_LAI_origpheno_printsafe.pdf", plot=both,
width = col2, height = 120, units = 'mm')
printsafe <- c('#a6cee3','#1f78b4','#b2df8a','black')
printsafe2 <- c('#1b9e77', '#d95f02', '#7570b3', 'black')
gpp3 <- gpp2 + scale_color_manual(values=printsafe2)
lai3 <- lai2 + scale_color_manual(name="Source",
breaks=c("Evergreen","Raingreen","Summergreen","MODIS"),
labels=c("Evergreen","Raingreen","Summergreen","Reference Data"),
values=printsafe2)
gp1<- ggplot_gtable(ggplot_build(gpp3))
gp2<- ggplot_gtable(ggplot_build(lai3))
maxWidth = unit.pmax(gp1$widths[2:3], gp2$widths[2:3])
gp1$widths[2:3] <- maxWidth
gp2$widths[2:3] <- maxWidth
both <- grid.arrange(arrangeGrob(gp2,gp1, ncol=1,heights = unit(c(60,60), "mm")))
ggsave("figures/GPP_LAI_origpheno_printsafe.pdf", plot=both,
width = col2, height = 120, units = 'mm')
30/6
rm(list=ls())
library(tidyverse); theme_set(theme_bw(base_size=18))
library(data.table)
library(zoo)
setwd("~/Documents/C2E/Output")
k <- read.csv("../Data/RefData/anpp_1991_2012.csv")
head(k)
orig1 <- NULL
